# HTML+CSS+JSでローグライクゲームをAI駆動開発する際の仕様書

## ■大まかな要件

- **HTML+CSS+JSの組み合わせや適切なその他ライブラリで組むこと**

## ゲームシステム基本

- ターン制ローグライク風RPG
    - 厳密なローグライクとは異なる点がある
        - ダンジョンから出たり死んだりしても回復アイテムはロストせず、経験値やレベルもそのまま引き継がれる
- 自分が行動すると敵も行動する（1ターン）
- 斜め移動は自分も敵も不可能
- 先に隣接した方が先に攻撃が発動する
- 攻撃は隣接していないとできない
- ダンジョンから戻るとHPは全回復する
    - 経験値は失われない
- ゲームを閉じてもプレイヤーの状態は保持される
    - JSONなどで永続化
    - ゲームデータのインポート・エクスポート機能（JSON）

## ダンジョン構造

- ダンジョンはプロシージャル生成（マス目管理）
    - カスタム実装やライブラリに任せる
- ダンジョンサイズは「15 + 階層 × 5」の正方形
    - 例：1F = 20×20、2F = 25×25、3F = 30×30
- ランダムな場所に壁や四角い構造物が配置
- 到達できない床が存在しない設計（4方向移動のみで全エリアにアクセス可能）
- 階層は10Fまであり、階段はランダムな位置に配置
- 10F到達時に10×10のシンプルな四角い部屋に入り、中央にボスが配置
- 10Fのボス部屋では宝箱が上下左右に4つボスを囲むように配置（プレイヤーレベルがボス+5以上の場合は生成されない）
- 階層を進んでも敵のレベルは変わらず、再生成されるのみ

## ダンジョン内要素

- 床の特性は以下の4種をサポートする（生成アルゴリズムやMODが指定可能）
    - **通常床**：従来どおりの挙動
    - **氷床**：プレイヤーが進入すると同じ方向へ滑走し、壁や非氷床・敵に当たるまで止まらない（推奨レベルがプレイヤーより 5 以上低い場合は滑走自体が発生しない）。滑走中に敵へ突入した場合はその場で戦闘が発生し、滑走は終了する
    - **毒床**：プレイヤーが踏むたびに最大HPの10%を基準に、推奨レベルが 1 低いごとに 1.5 倍ずつ増加する割合（最低1）でダメージ。推奨レベルがプレイヤーより 5 以上低い場合はダメージ 0。
    - **爆弾床**：踏むと爆発し、推奨レベルとの差によって最大HPに対する割合ダメージを与える（推奨≧プレイヤーで100%、差1で80%、差2で50%、差3で25%、差4で10%、差5以上で0%）。
- 宝箱：ダンジョンの幅+高さが15につき1つ生成（黄色い●で表示）
    - アイテムは宝箱からのみ入手可能（緑の丸は削除）
    - 推奨レベル+5以上のプレイヤーレベルの場合は生成されない
- 敵：ダンジョンの幅+高さが8につき1体生成（赤い丸で表示、サイズはセルサイズの0.9倍）
- 自分：青い▲で表示（向きあり）
- 階段：次の階層へ進むための階段がランダムな位置に配置

## ダメージ計算

- レベル差5で大きい方からのダメージは2倍、小さい方からは0.5倍の指数的補正（レベル差10までが指数的な曲線）
- レベル差10で大きい方からのダメージは10倍、小さい方からは0.1倍
- レベル差20で大きい方からのダメージは100倍、小さい方からは0.01倍（以降レベル差が10大きくなる事に大きい方からのダメージが10倍ずつ大きくなっていく指数カーブ。小さい方からも同様の0.1倍ずつ小さくなっていく指数カーブ）
- クリティカルヒット率は10%
- クリティカルヒットダメージは1.5倍
- ダメージ計算にはランダムな変動あり
    - 70%から120%
- 小数点以下は切り上げる
    - ただし、0.5より小さいダメージは0になる

## 命中率システム

- レベル差2以内：ヒット率80%
- レベル差3以上：大きい方からの攻撃は必中
- レベル差5以上：大きい方からの攻撃は必中かつ必ずクリティカル、小さい方からの攻撃は50%の確率でミス
- レベル差7以上：小さい方からの攻撃は必ずミス

## UI・ビジュアル表現

- 左上に自分のHP（数字とバー）、レベル、攻撃力、防御力を表示
    - カードスタイルで
- HP・経験値バーはアニメーション付き
    - レベルアップ時、経験値バーがアニメーションで満たされたあとに空になるアニメーション演出
    - 経験値の取得時やHP変動時にバーのアニメーション演出
- 画面下にログ表示（行動や戦闘結果の通知）
    - 例えば、「敵を倒した！」や「レベルアップ！レベル：2 (+1)|最大HP：105(+5)|攻撃力：11(+1)|防御力：11(+1)」など
- 右上に「戻る」ボタン（ダンジョン選択画面へ）
- 戻るボタンの隣にアイテムボタン（アイテム選択画面へ）
    - アイテム画面ではHP30%回復アイテムが表示され、使用ボタンを押すと使用できる
    - アイテムモーダルは null と 0 の値を適切に処理し、「x NaN」ではなく「x 0」と表示
- アイテムボタンの隣にはステータスボタン（自分のステータスを確認する画面へ）
    - ステータスモーダルは詳細な情報を3つのセクションで表示：
        1. 基本ステータス（レベル、経験値、HP、攻撃力、防御力、現在階層）
        2. 所持アイテム（全アイテムの個数表示）
        3. ゲーム設定（選択世界、難易度）
    - カード形式のレイアウトで視覚的階層を持つ設計
- マップ描画ではタイルごとに壁色/床色を設定可能。色指定が無い場合は壁 `#2f3542`、床 `#ced6e0` を使用する
- 氷床は淡い水色、毒床は黄緑色でハイライトし、通常床との視認性を確保する（推奨レベルがプレイヤーより 5 以上低い場合は床ギミックが無効化される旨をツールチップ等で提示）

### ポップアップとインジケーター

- **値変化インジケーター**：
    - HP・EXP変化は浮動ポップアップで視覚表示
    - 正の変化（回復、EXP取得）は青色、負の変化（ダメージ）は赤色
    - HPバー（.bar.hp要素）の隣、EXPバー（.bar.exp要素）の隣に表示
    - スムーズなアニメーションと1.5秒後の自動削除
    - **グループ化システム**：同時発生するポップアップを垂直配置で重複防止
        - 50msの収集ウィンドウ内で同時ポップアップをグループ化
        - 各ポップアップ間で0.15秒の段階的アニメーション遅延

- **レベルアップポップアップ**：
    - 2箇所同時表示：1) プレイヤーキャラクター上（ゲームキャンバス）、2) レベル表示隣（#stat-level要素）
    - キャンバス版：ゴールドテキスト（#ffd700）、大きなスケール（2.0）
    - ステータス版：グループ化ポップアップシステムの一部

- ダメージポップアップ：
    - 自分へのダメージ：赤色
    - 敵へのダメージ：白色
    - クリティカルヒット：オレンジ色＋「!」マーク
    - 敵を倒した場合：大きめの数字＋ドクロマーク
    - ミス：水色で「Miss」表示
    - 999999999を超えるダメージは「999999999+」と表示
    - **全ダメージポップアップは境界線付きデザイン**：半透明黒背景と白い境界線で視認性向上

- **ゲームオーバー画面**：
    - モダンなガラスモーフィズムデザイン（半透明オーバーレイとブラー効果）
    - ビューポートベースサイズ（100vw/100vh）とマージン/パディングリセット
    - アニメーション付きカードデザイン：
        - フェードインオーバーレイアニメーション（0.8秒）
        - スライドアップカードアニメーション（0.8秒 + 0.3秒遅延）
    - 最終統計表示（到達階層、最終レベル）
    - 固定ポジショニングに`!important`宣言を使用して親コンテナ制約から完全分離
    - ゲームオーバーからの復帰時にHPが全回復する機能を含む

- 敵撃破時：敵グラフィックが収縮して消えるアニメーション
- 敵の下には敵のレベルやHPの数値（白色）と敵のHPバー（黄緑色、減った部分は赤色）が小さく表示される
    - レベルは文字表示（例：「Lv. 5」）
    - HPはバー表示、その下に「HP 50/100」と表示
    - バーはアニメーション付き
    - レベルやHPの数値はプレイヤーのレベルよりも5以上高い場合は橙色で表示される
    - レベルやHPの数値はプレイヤーのレベルよりも5以下低い場合は少し明るい青色で表示される
    - **敵テキストは白枠の半透明黒背景で読みやすく表示**

- 敵をマウスでクリックすると敵のステータス画面を確認できる
    - 与ダメージ範囲と被ダメージ範囲の見込みも表示される
        - 戦うかどうかの判断に

## キャラクターステータス

- **プレイヤー初期ステータス（レベル1時）：**
    - 最大HP：100（レベルごとに+5）
    - 攻撃力：10（レベルごとに+1）
    - 防御力：10（レベルごとに+1）

- **通常の敵 初期ステータス（レベル1時）：**
    - 最大HP：50（レベルごとに+5）
    - 攻撃力：8（レベルごとに+1）
    - 防御力：8（レベルごとに+1）

- **ボス初期ステータス（レベル1時）：**
    - 最大HP：1000（レベルごとに+50）
    - 攻撃力・防御力は通常の敵のレベルアップ成長に準じる（つまりレベル1時は攻撃8, 防御8。レベルごとに+1）
    - ボスのレベル：推奨レベル+5

### 高レベル帯の敵タイプと状態異常

- 推奨レベル 250 以上のダンジョンでは、各敵に以下の追加タイプがランダムで割り当てられる
    - **状態異常使い**：攻撃命中時に毒／麻痺／能力低下／レベル低下のいずれかを付与
    - **転移者**：攻撃命中時にプレイヤーを別の床マスへワープさせる
    - **死神**：低確率で即死攻撃を行う
    - **突撃兵**：プレイヤーを 2 マス吹き飛ばし、壁衝突時に追加ダメージ
    - **迅速兵**：1 ターン内で最大 2 行動
- 敵レベルがプレイヤーより 5 以上低い場合、これらの特殊行動および状態異常は発動しない
- 状態異常の効果は以下のとおり（プレイヤー UI に残ターンを表示）
    - **毒**：ターンごとに現在の最大 HP の 10% ダメージ。HP が 0 になると敗北
    - **麻痺**：指定ターンのあいだプレイヤー行動不可。ターン経過で解除
    - **能力低下**：最大 HP・攻撃力・防御力が 80% に低下。解除時に元へ戻る
    - **レベル低下**：表示レベルが一時的に -3 され、命中率・ダメージ計算に影響

## 敵レベルと経験値

- 敵レベル：ダンジョンの推奨レベル±4の範囲でランダム
- ボスのレベル：ダンジョンの推奨レベル+5
- 経験値獲得：（通常の敵）
    - 自分より7以上高いレベルの敵：1200
    - 自分より5以上高いレベルの敵：600
    - 自分より1以上高いレベルの敵：300
    - 自分と同じレベルの敵：150
    - 自分より1低いレベルの敵：100
    - 自分より2低いレベルの敵：70
    - 自分より3低いレベルの敵：50
    - 自分より4低いレベルの敵：25
    - 自分より5低いレベルの敵：10
    - 自分より6以上低いレベルの敵：1
- ボスの経験値：通常の敵の経験値の合計の2倍
- レベルアップに必要な経験値：1000固定

## アイテム・宝箱

- 宝箱生成数：ダンジョンの幅+高さが15につき1つ生成
    - 例：20×20ダンジョンの場合：(20+20)/15 = 2.67... → 2個
    - 例：30×30ダンジョンの場合：(30+30)/15 = 4個
- 宝箱ドロップ：（以下確率でのドロップ）
    - 90%：HP30%回復アイテム
    - 10%：パラメータ上昇アイテム（最大HP+5、攻撃力+1、防御力+1のいずれか）
- 自分がダンジョンの推奨レベルよりも5以上高かったら、宝箱は設置されない

## 難易度設定

- Very Easy：敵へのダメージ4倍、自分へのダメージ0.25倍
- Easy：敵へのダメージ2倍、自分へのダメージ0.35倍
- Normal：敵へのダメージ1.6倍、自分へのダメージ0.5倍
- Second：敵へのダメージ1.4倍、自分へのダメージ0.7倍
- Hard：敵へのダメージ1.2倍、自分へのダメージ0.85倍
- Very Hard：敵へのダメージ1倍、自分へのダメージ1倍

## ダンジョン選択画面

- ゲームを起動するとダンジョン選択画面が開く
- **モダンなデザイン仕様**：
    - グラデーション背景とグラスモーフィズムエフェクトを使用したおしゃれなデザイン
    - プレイヤーのステータス情報をカード形式で表示し、グリッドレイアウトで見やすく配置
    - ボタンにホバーエフェクトとグラデーション背景を適用
    - 探索画面のボタンやUIも同様のスタイリッシュなデザインで統一
    - ツールバーボタンにモダンスタイリング適用
    - ゲームコンテナとキャンバスにガラスモーフィズム効果
    - プレイヤー統計カードにグラデーション背景
    - HP/EXPバーに発光効果
    - メッセージログにモダンスタイリング
    - モーダルに包括的なデザイン改修
- **ダンジョン詳細表示**：
    - ダンジョン選択時に詳細情報カードを表示
    - ダンジョン名、タイプ、推奨レベル、ダメージ倍率、説明を含む
    - カードスタイルデザインで統一
- 難易度選択ボタンが並ぶ（選択させる）
- 世界がA世界からJ世界までの10世界があり、それがボタンで並ぶ（選択させる）
    - A世界は推奨レベルに影響を与えない
    - B世界は推奨レベルがダンジョンのレベル+100となる
    - C世界は+200というような感じで
- ダンジョン名が表示されたボタンが並ぶ
    - クリックするとダンジョン生成され、探索開始
- ボタンにホバーすると推奨レベルがポップアップ表示
- ボタンクリックでダンジョン生成・探索画面へ移行

## ダンジョンと世界について

- ダンジョンには種類がある
    - 種類によって生成が変化する（階層によって生成が変化する種類もある）
        - **フィールド型**（壁が少なく、広い）
            - マップサイズに応じて壁密度を動的調整（大きなマップほど密度を低く）
        - **洞窟型**
            - スムージング反復回数をマップサイズに応じてスケール
            - 壁密度を大きな洞窟で微調整し洞窟らしさを維持
        - **単部屋型**（一つの中くらいの四角い部屋、生成固定、ボス階層での生成）
            - マップサイズに応じて部屋サイズを動的調整
            - 中央配置で周囲は全て壁
        - **迷路型**（通路が細くて細かい迷路と、通路が太い単純な迷路型に分かれる）
            - ステップサイズをマップサイズに応じて動的スケール
            - 大きな迷路では壁確率を低下させ過密を防止
            - 追加のランダム壁で複雑さを追加
        - **円型**（中くらいの円の部屋、生成固定、ボス階層での生成）
            - マップサイズに応じて円の半径を動的調整
            - 中央配置で円形の部屋を生成
        - **狭い迷路型**（細かい迷路、通路が細くて複雑）
            - 高い壁確率で細かい通路を生成
            - 隣接セルにも壁を配置して狭い通路を作成
        - **幅広迷路型**（通路が太い単純な迷路）
            - 低い壁確率で広い通路を生成
            - 壁ブロックを大きく配置して幅広な通路を確保
        - **スネーク型**（分かれ道がないけど、クネクネしている通路）
            - 左上から右下への長い蛇行ルートを生成
            - ターゲット地点向かいの方向優先システム（70%確率で目標方向選択）
            - 衝突回避機能付きで既存パスとの交差を防止
            - 適度な幅のコリドー（sizeFactor * 0.4）で通行しやすさを確保
            - 10%確率のランダム方向転換で自然な蛇行を生成
            - 目標地点到達または行き詰まり時の安全な終了機能
            - **特殊なエンティティ配置ルール**：
                - プレイヤーは左上角の最初の床タイルに配置
                - 階段は右下角の最初の床タイルに配置
                - 敵と宝箱は必ず床タイルに配置（randomFloorPosition関数使用）
        - **混合型**（特殊なダンジョンで使用。階層ごとに生成される型もランダムに選択される）
            - 各階層で異なる生成タイプをランダム選択
            - フィールド、洞窟、狭い迷路、幅広迷路、単部屋、円型、スネーク型から選択
        - **部屋アンド通路型**（トルネコの大冒険のような不思議のダンジョンと同じような生成、つまり、部屋がいくつかあってそれが通路でつながっている）
            - 部屋数と部屋サイズをマップサイズに応じてスケール
            - 大きなマップでは追加接続で接続性向上
            - 部屋間の適切な間隔と配置試行回数を増加
        - **円型部屋アンド通路型**（円形の部屋が複数生成され、それが通路で繋がれた新タイプ）
            - 円形の部屋を複数生成し通路で接続
            - マップサイズに応じて部屋数と半径を調整
            - 重複回避機能付きで適切な間隔を保持
    - **動的生成アルゴリズムスケーリング**：
        - サイズファクター公式：`sizeFactor = Math.min(MAP_WIDTH, MAP_HEIGHT) / 20`
        - 各生成アルゴリズムがマップサイズに応じて適切にスケールするよう修正
        - 大きなダンジョンでの中央開放問題を解決
        - 接続性保証機能を全タイプに適用
    - ダンジョンには推奨レベルが1、11、21、31、41、51、61、71、81、91の10つのダンジョンがある
    - 世界がA世界からJ世界までの10つの世界とX世界がある。
        - A世界ではダンジョンの推奨レベルはそのまま
        - B世界はダンジョンの推奨レベルが+100される
            - つまりB世界の推奨レベル11のダンジョンは推奨レベル111となる
        - C世界は+200というような感じで
            - つまりC世界の推奨レベル11のダンジョンは推奨レベル211となる
    - X世界はダンジョンが一つだけの例外であり、X世界のダンジョンは推奨レベル1000となる
        - X世界ではダンジョンが25階層あり、推奨レベルは「1000+階層」となり、その中で+-5の範囲でランダム
            - 例えば、X世界のダンジョンの1Fでは敵レベルが996から1004の範囲でランダムで出現するというような感じ

## 操作方法

- 矢印キー：自分の移動、敵が隣接している方向なら攻撃
- スペースキー：向いている方向に攻撃

## ブロック次元（BlockDim）モード

- 概要：通常ワールド選択と併存する拡張モード。次元（a..z）と3つのブロック（1st/2nd/3rd）を選び、その組み合わせからダンジョン仕様を合成して生成に反映する。同一選択は同一シードで同一ダンジョンを再現。
- データソース：`blockdata.json`（`blocks1`/`blocks2`/`blocks3`）と設計仕様（`ブロック次元の設計.md`）。

### データ定義（要約）

- 次元（Dimension）：`a..z` のキーを持ち、各次元は推奨レベルの基準値（例：a=1, b=101 ...）を持つ。
- ブロック（Block）：以下の属性を持つ。
  - `key`/`name`：識別子と表示名
  - `level`：推奨レベル補正（±）
  - `size`：マップサイズ係数（-2..+2 目安）
  - `depth`：階層の深さ補正（±）
  - `chest`：宝箱量バイアス（`less`/`normal`/`more`）
  - `type`：生成タイプの優先指定（`field`/`cave`/`narrow-maze`/`wide-maze`/`rooms`/`single-room`/`circle`/`snake`/`mixed`/`circle-rooms`）
  - `bossFloors`：ボスが出現する階の指定（例：[5,10,15]）
- ブロックは3系列に分かれる：`blocks1`（1st）、`blocks2`（2nd）、`blocks3`（3rd）。

### 合成仕様（仕様レベル）

- 記号：`dim` は選択した次元、`b1/b2/b3` は選択ブロック。
- 推奨レベル：`level = baseLevel(dim) + (b1.level||0) + (b2.level||0) + (b3.level||0)`（最低1以上）
- サイズ係数：`sizeFactor = (b1.size||0) + (b2.size||0) + (b3.size||0)`
  - マップサイズ式を拡張：`MAP = max(15, (15 + 階層×5) + sizeFactor×2)`
- 深さ（最大階層）：`depth = clamp(1..15, 1 + (b1.depth||0) + (b2.depth||0) + (b3.depth||0))`
  - 最終階は `depth`。それを超える階段は生成しない。
- 宝箱バイアス：3値の多数決。引き分け時の優先順位は `normal > more > less`。
- 生成タイプ：優先順位は 3rd → 2nd → 1st。全て未指定なら `mixed`。
- ボス階層：`bossFloors = (b1 ∪ b2 ∪ b3)` を昇順ユニーク化し、`1..depth` のみ有効。

### 生成への反映

- マップサイズ：上記 `sizeFactor` により 1段階でタイル数±2相当で調整。
- 生成タイプ：`type` を採用（`mixed` は既存の混合ルールと同義）。
- 宝箱数：既存の基準（幅+高さが15につき1つ）に倍率を掛ける。
  - `less=0.7` / `normal=1.0` / `more=1.3`
- ボスフロア：`isBossFloor(level)` は合成結果の `bossFloors` を優先。未指定時は従来ルール（例：10F固定、X世界は25F）を使用。
- 最大階層：`depth` が上限。ボス階はこの上限内でのみ発生。
- 推奨レベル：ダンジョン詳細・敵レベル帯の基準値として `level` を採用。

### UI（ダンジョン選択画面の拡張）

- タブを追加：`Normal` と `BlockDim` の2系統で選択。
- `BlockDim` タブ構成：
  - セレクト：`bdim-select-dimension`（a..z）、`bdim-select-1st`、`bdim-select-2nd`、`bdim-select-3rd`
  - プレビューカード：合成結果を即時反映（推奨Lv、タイプ、深さ、サイズ係数、宝箱バイアス、ボス階）
  - 入場ボタン：`Gate`（合成仕様でゲーム開始）
- モード共存：通常の世界/ダンジョン選択はそのまま残し、どちらか一方で開始可能。

### RNG・再現性

- 固定シード：`seed = hash32("dim|b1|b2|b3")` を用いて合成選択に基づく再現性を担保。

### 永続化・インポート/エクスポート

- 追加保存項目：`blockDim` オブジェクト（`enabled`, `dimKey`, `b1Key`, `b2Key`, `b3Key`）。未保存時は `enabled:false` とみなす。
- エクスポートJSONには `blockDim` を含め、未対応バージョンでも無視して問題ない形にする。

### バリデーション

- `1 <= depth <= 15`、`sizeFactor ∈ [-2..+2]`（越えは丸め）、ボス階は `1..depth`。
- 推奨Lvは1以上。UIプレビューで境界丸めを明示。

### `blockdata.json` 利用上の注意

- `blocks1/2/3` はそれぞれ役割が異なるわけではなく、合成時の優先度のみが異なる（タイプは3rd→2nd→1st の後勝ち）。
- 代表例（抜粋）：
  - `blocks1`：`azure(蒼穹の)` Lv+10 / `cursed(呪詛の)` Lv+13, 深さ+1, ボス[5,10] 等
  - `blocks2`：`endless(無窮の)` サイズ+1, 深さ+2 / `spiral(螺旋の)` 狭い迷路 等
  - `blocks3`：`labyrinth(迷宮)` 深さ+3, 狭い迷路, ボス[5,10,15] / `arena(闘技場)` 単部屋, ボス[5,10,15]
- 実際のテーブルは `blockdata.json` を参照して拡張・調整する。

### 実装ガイド（既存仕様との接続）

- 既存サイズ式・タイプ分岐・宝箱配置・ボス階判定に、上記合成パラメータを優先する分岐を最小限で追加する。
- 既存の「世界 A..J/X」は `Normal` タブ専用のまま保持し、`BlockDim` は独立した選択系として提供する。

（詳細は `ブロック次元の設計.md` を参照）
