<html>

<head>
	<meta http-equiv="Content-Language" content="ja">
			<meta http-equiv="Content-Type" content="text/html; charset=shift_jis">
	<link rel="stylesheet" type="text/css" href="../../style.css">
	<title>TCP/IPでチャットを作る</title>
</head>

<body>

<div id="header">
	<div class="title">
		TCP/IPでチャットを作る</div>
	<div class="sub">
		TTSneoマニュアル</div>
	<div class="navi">
		<a target="_parent" href="../../index.html">マニュアル</a> &gt; <a target="_parent" href="../index.htm">機能編</a> &gt; <a target="contents" href="menu-net.htm">インターネット</a> &gt;</div>
	<div class="date">
		<!--webbot bot="Timestamp" s-type="EDITED" s-format="%Y/%m/%d" startspan -->2007/03/18<!--webbot bot="Timestamp" endspan i-checksum="12507" -->更新</div>
</div>
<h2>TCP/IP通信を使ってチャットをするには</h2>
<blockquote>
	<p>TTSneoでは、TTSExtra.dllを使うことで、TCP/IP通信が行えます。<br>
	この機能を利用することで、TCP/IP上で、チャットやパソコン間の通信を行うことができます。 </p>
	<p>　</p>
</blockquote>
<h4>著作権情報</h4>
<blockquote>
	<p>この機能は、PANDA氏のTCP/IP通信モジュールを利用させていただきました。<br>
	このようなコードをフリーで提供しているPANDA氏に感謝いたします。<br>
	　<a href="http://hp.vector.co.jp/authors/VA022513/" target="_blank">http://hp.vector.co.jp/authors/VA022513/</a>
	</div>
	</p>
</blockquote>
<p>　</p>
<h2>TCP/IP機能の初期化</h2>
<blockquote>
	<p>まず、「利用」命令を使って、TTSneoでTCP/IPの機能を利用できるようにします。<br>
	その後、初期化します。 </p>
	<p class="example">「TTSExtra.TCPIP」を</span>チャットとして利用<br>
	チャットを</span>初期化</p>
	<p>「プラグインは利用できません。」と表示された場合は、TTSExtra.dllがプログラムと同じフォルダにあるか確認してください。</p>
	<p>ここでは、「チャット」と指定しましたので、このTCP/IP通信で実行される手順「チャットの〜」といった手順名になります。<br>
	名前を変更すると、手順名も変わります。</p>
	<p class="steps"><b>▼参照</b><br>
	　機能編「<a href="../plugin.htm">プラグインを活用する</a>」</p>
</blockquote>
<p>&nbsp;</div></p>
<h2>サーバとして待機する</h2>
<blockquote>
	<p>サーバとして動作させたい場合は、下のように命令します。 </p>
	<p class="example">チャットを</span>待機</p>
	<p>サーバとなっている自分のパソコンのIPアドレスは、「チャットのローカルホストアドレス（チャットのIPアドレス）」設定項目で取得できます。<br>
	また、「チャットのローカルホスト」設定項目で、コンピュータ名が取得できます。 </p>
</blockquote>
<h4>接続要求が来た時</h4>
<blockquote>
	<p>サーバへ接続要求が来ると、自動的に接続を開始して、下の手順が実行されます。 </p>
	<p></p>
	<p class="example">手順は　</span>チャットの接続要求<br>
	　　「接続要求　［チャットのリモートホストアドレス］」</span>を表示<br>
	終わり</span></p>
	<p>接続要求してきたコンピュータのＩＰアドレスは、「チャットのリモートホストアドレス」設定項目に表されます。 
	</div>
	</p>
</blockquote>
<p>　</p>
<h2>サーバへ接続する</h2>
<blockquote>
	<p>サーバとして待機している別のコンピュータへ接続するには、下のようにします。 </p>
	<p class="format">チャットを</span>[アドレス]へ接続</p>
	<p>[アドレス]には、IPアドレスかホスト名のどちらかを指定できます。</p>
	<p>　</p>
	<p>下の例では、「入力」関数を使って接続先のアドレスを指定しています。 </p>
	<p class="example">接続先は、入力（「接続先を指定してください」，チャットのIPアドレス）</span><br>
	もし</span>　接続先は、「」</span>　なら　抜ける<br>
	チャットを</span>接続先へ接続</p>
</blockquote>
<p>　</p>
<h4>接続に失敗したとき（エラーが発生したとき）</h4>
<blockquote>
	<p>TCP/IP通信機能でエラーが発生すると、下の手順が実行されます。 </p>
	<p></p>
	<p class="example">手順は　</span>チャットのエラー<br>
	　　「エラーです　［チャットのエラーメッセージ］」</span>を表示<br>
	終わり</span> </p>
	<p>エラーが発生したときは、「チャットのエラーメッセージ」設定項目にエラーメッセージが保存されます。<br>
	また、「チャットのエラー番号」からエラー番号を調べることもできます。<br>
	(エラーによっては、手順ではなく通常のエラーになることもあります)
	</div>
	</p>
</blockquote>
<p>　</p>
<h2>メッセージの送信と受信</h2>
<blockquote>
	<p>接続が確立されていると、メッセージの送受信ができます。 </p>
	<p>メッセージを受信すると「チャットの受信」手順が実行されます。<br>
	受信したメッセージは、「チャットの内容」設定項目に保存されます。 </p>
	<p>下の例では、受信後に文章テキストにメッセージを表示するサンプルです。 </p>
	<p class="example">手順は　</span>チャットの受信<br>
	　　文章テキスト１の選択スタートを文字数（文章テキスト１の内容）</span>に変えろ<br>
	　　文章テキスト１に、</span>チャットの内容を</span>挿入<br>
	終わり</span></p>
	<p>メッセージを送信するには、「送信」命令を使います。 </p>
	<p class="format">チャットの[メッセージ]を</span>送信 </p>
	<p></p>
	<p class="format">チャットの内容を</span>[メッセージ]に変えろ<br>
	チャットを</span>送信</p>
</blockquote>
<p>　</p>
<h2>ポートの設定をする</h2>
<blockquote>
	<p>受信ポートは「ローカルポート」設定項目で、送信ポートは「リモートポート」設定項目で指定することができます。 </p>
	<p>通常、どちらも4999に設定されています。 </p>
	<p class="example">チャットのローカルポートを</span>1500に変えろ<br>
	チャットのリモートポートを</span>1500に変えろ</p>
	<p>メッセージを受信・送信しても、画面には表示されません。<br>
	そのとき上のような手順を利用すれば、一般的なチャットプログラムと同じ画面を作成することができます。 
	</div>
	</p>
</blockquote>
<p>　</p>
<h2>接続・切断したときの手順</h2>
<blockquote>
	<p>接続が確立すると、「チャットの開始」手順が実行され、切断されると「チャットの切断」手順が実行されます。 </p>
	<p class="example">手順は　</span>チャットの開始<br>
	<br>
	終わり</span><br>
	手順は　</span>チャットの切断<br>
	<br>
	終わり</span></p>
</blockquote>
<p>　</p>
<h2>IPアドレス←→ホスト名</h2>
<blockquote>
	<p>IPアドレスからホスト名を取得したり、ホスト名からIPアドレスを取得するには、下のような関数を利用します。<br>
	この機能を使うには、必ず「初期化」命令を実行する必要があります。</p>
	<p class="format">チャットのホスト名（[IPアドレス]）<br>
	チャットのIPアドレス（[ホスト名]）</p>
	<p>　</p>
	<p class="example">チャットを初期化<br>
	チャットのホスト名（「192.168.0.12」）を表示<br>
	チャットのIPアドレス（「www.yahoo.co.jp」）を表示</p>
</blockquote>
<p>　</p>
<h2>状態を調べる</h2>
<blockquote>
	<p>「状態」設定項目で、TCP/IP機能の状態を調べることができます。 </p>
	<h4>状態の一覧</h4>
	<table border="1">
		<tr>
			<td width="10%">0</td>
			<td>(既定値) 閉じています。</td>
		</tr>
		<tr>
			<td width="10%">1</td>
			<td>開いています。</td>
		</tr>
		<tr>
			<td width="10%">2</td>
			<td>接続要求を待っています。</td>
		</tr>
		<tr>
			<td width="10%">3</td>
			<td>接続がペンディング状態になっています。</td>
		</tr>
		<tr>
			<td width="10%">4</td>
			<td>ホストの解決処理中です。</td>
		</tr>
		<tr>
			<td width="10%">5</td>
			<td>ホストの解決が完了しました。</td>
		</tr>
		<tr>
			<td width="10%">6</td>
			<td>接続処理中です。</td>
		</tr>
		<tr>
			<td width="10%">7</td>
			<td>接続が完了しました。</td>
		</tr>
		<tr>
			<td width="10%">8</td>
			<td>相手側のマシンが接続を閉じようとしています。</td>
		</tr>
		<tr>
			<td width="10%">9</td>
			<td>エラー</td>
		</tr>
	</table>
</blockquote>
</div>
<p>　</p>
<h2>チャットソフトを作る</h2>
<blockquote>
	<p>チャットのサンプルプログラムがTTSneoのサンプルフォルダにありますので、<br>
	それを参考に、「ウィンドウの編集」でオブジェクトを貼り付けて、プログラムを作ってください。 </p>
	<p>ここでは、文章テキストに順々にメッセージを表示するための手順を紹介します。 </p>
	<p class="example">手順は　メッセージ表示（［内容］を）</span><br>
	　　文章テキスト１の選択スタートを文字数（文章テキスト１の内容）</span>に変えろ<br>
	　　文章テキスト１に、［</span>内容］［</span>改行］</span>を挿入<br>
	終わり</span></p>
	<p class="steps"><b>▼参照<br>
	</b>　基本編「<a href="../../basic/usercmdfunc.htm">オリジナルの命令・関数を作る</a>」</p>
	<p>この手順を使うための書式 </p>
	<p class="format">[表示するメッセージ]をメッセージ表示</p>
	<p>メッセージを受信・送信しても、画面には表示されません。<br>
	そのとき上のような手順を利用すれば、一般的なチャットプログラムと同じ画面を作成することができます。 
	</div>
	</p>
</blockquote>

</body>

</html>
