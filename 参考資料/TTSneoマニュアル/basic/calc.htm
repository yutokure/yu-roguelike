<html>

<head>
<meta http-equiv="Content-Language" content="ja">
<meta name="GENERATOR" content="Microsoft FrontPage 5.0">
<meta http-equiv="Content-Type" content="text/html; charset=shift_jis">
<link rel="stylesheet" type="text/css" href="../style.css">
<title>計算させる</title>
</head>

<body>

<div id="header">
	<div class="title">２．計算させる</div>
	<div class="sub">
		TTSneoマニュアル</div>
	<div class="date">
		<!--webbot bot="Timestamp" s-type="EDITED" s-format="%Y/%m/%d" startspan -->2004/10/20<!--webbot bot="Timestamp" endspan i-checksum="12308" -->更新</div>
	<div class="navi">
		<a target="_parent" href="../index.html">マニュアル</a> &gt; <a target="_parent" href="index.htm">基本編</a> &gt;</div>
</div>

<h2>＋−×÷・・・</h2>
<table border="0" cellpadding="10" cellspacing="0" width="100%">
	<tr>
		<td><img border="0" src="../img/ttschar2.png" width="133" height="131"></td>
		<td>パソコンは、パーソナルコンピュータの略。<br>
		コンピュータを日本語で言うと？？？<p>電脳？？</p>
		<p>いえいえ。</p>
		<p>電子計算機ですよね。</p>
		<p>パソコンって、もともと計算するための道具だったんです。</p>
		<p>もちろんTTSneoでも計算させることができます。</td>
	</tr>
</table>
<p>　</p>
<h2>まずは、</h2>
<blockquote>
	<p class="neo">ねお　「次は、計算をさせてみましょう。」</p>
	<p class="tomo">とも　「計算ね。分かった」</p>
	<p class="neo">ねお　「計算をさせるには、下のように命令してみてください。」</p>
	<p class="example">１＋１を表示</p>
	<p class="tomo">とも　「前回の「こんにちは」の部分が１＋１に変わっただけだね！」</p>
	<p class="neo">ねお　「答えがちゃんと出るか実行してみてごらん。」</p>
	<p>　</p>
	<p>実行すると、１＋１を計算して答えを表示します。<br>
	早速実行してみましょう。 </p>
	<p>「２」と表示されればＯＫです。 </p>
	<p class="tomo">　</p>
	<p class="tomo">とも　「おっ　２って表示されたよ」</p>
	<p class="neo">ねお　「計算式は、四則演算（足す・引く・かける・割る）とカッコを使った式が使えます。<br>
	例を作ってみたから、次のプログラムを入力してみてください。」</p>
	<p class="example">１＋１を表示<br>
	２−２を表示<br>
	３×３を表示<br>
	４÷２を表示</p>
	<p>ところが、パソコンのキーボードには、×や÷といった記号は入力できません。<br>
	通常、プログラムなどでは、×(掛け算)を「＊」、÷(割り算)を「／」で表します。</p>
	<p class="tomo">とも　「ふぅ　入れるのが大変だった。」</p>
	<p class="neo">ねお　「×や÷は、記号入力で入力することができますが、＊や／の方が楽に入力できるから、慣れてきたら＊や／を使ってね。」</p>
</blockquote>
<div align="center">
	<center>
	<table border="1" width="60%">
		<caption>TTSneoで使える計算式</caption>
		<tr>
			<td class="items" align="center">記号</td>
			<td class="items" align="center">意味</td>
		</tr>
		<tr>
			<td align="middle">＋</td>
			<td>足し算</td>
		</tr>
		<tr>
			<td align="middle">−</td>
			<td>引き算</td>
		</tr>
		<tr>
			<td align="middle">＊(×)</td>
			<td>かけ算</td>
		</tr>
		<tr>
			<td align="middle">／(÷)</td>
			<td>わり算</td>
		</tr>
		<tr>
			<td align="middle">（）</td>
			<td>（　）の中にある計算を先にします<br>
			さらに中に（　）を入れることもできます</td>
		</tr>
		<tr>
			<td align="middle">＾</td>
			<td>累乗（べき乗）<br>
			<b>例</b>　４＾２　→　4<sup>2</sup>＝16<br>
			10^10　→　10<sup>10</sup>＝1000000000(1E+10)</td>
		</tr>
		<tr>
			<td align="middle">￥</td>
			<td>整数の割り算の商（あまりを出すわり算）<br>
			<b>例</b>　１０￥３　→　３</td>
		</tr>
		<tr>
			<td align="middle">％</td>
			<td>整数の割り算の余り（剰余）<br>
			<b>例</b>　１０％９　→　1</td>
		</tr>
	</table>
	</center>
</div>
<h4>　</h4>
<h4>計算式を文字として表示したい</h4>
<blockquote>
	<p class="tomo">とも　「ところで、&quot;１＋１&quot;を文字として表示するにはどうしたらいいの？<br>
	　１＋１を表示　　と命令すると、「２」と表示されるから・・・」</p>
	<p class="neo">ねお　「そのようなときは、計算式に&quot;「　」&quot;を付ければ、計算式が文字として扱われます。」</p>
	<p class="example">「１＋１」を表示</p>
	<p class="tomo">とも　「なるほどね、文字にするときは&quot;「　」&quot;で囲めばいいんだね」</p>
	<p class="neo">ねお　「そう。前回の「こんにちは」を表示させたときも&quot;「　」&quot;を使ったよね」</p>
</blockquote>
<p>　</p>
<h2>（）を使った計算</h2>
<blockquote>
	<p class="tomo">とも　「カッコを使った計算をすることはできないの？」</p>
	<p class="neo">ねお　「もちろんできるよ。」</p>
	<p>※{ }(中カッコ)や[ ](大カッコ)は使うことができません。<br>
	( )（カッコ）の中に( )（カッコ）を重ねて使ってください。</p>
	<p class="neo">
	ねお　「例として今度は、（５＋２）×３＋（１８＋６）÷４＋５０という、ちょっと面倒な計算をさせてみましょう。下のように命令してみてください。」</p>
	<p class="example">（５＋２）×３＋（１８＋６）÷４＋５０を表示</p>
	<p class="tomo">とも　「よし、できた。答えは、７７だね」</p>
</blockquote>
<p>　</p>
<h2>計算プログラムを作ろう</h2>
<blockquote>
	<p>では、計算の方法が分かってきたところで、ちょっと実用的なプログラムを作ってみましょう。</p>
</blockquote>
<h4>商品の消費税を計算するプログラム</h4>
<blockquote>
	<p class="neo">ねお　「いま勉強したことを使って消費税を計算するプログラムを作ってみよう。」</p>
	<p class="tomo">とも　「よしやるぞぉ！！」</p>
	<p class="neo">ねお　「お買い物をするときに商品の値段とは別に、消費税がプラスされるけど、<br>
	消費税は、何％か知っているよね？」</p>
	<p class="tomo">とも　「ええっと・・・　５％　だよね？」</p>
	<p class="neo">ねお　「じゃ商品の消費税を計算するには、どう計算すればいい？」</p>
	<p class="tomo">とも　「商品の値段の５％プラスだから、１０５％・・・　１．０５倍すれば、税込価格になるね」</p>
	<p class="neo">ねお　「そうだよね。それを使って次のプログラムを作ってみて。<br>
	まだ、知らないことがたくさんあると思うけど、計算する部分だけは分かるでしょ。」</p>
	<p class="example">定価は　入力（「商品の値段を入力してね」）<br>
	結果は　定価＊１．０５<br>
	「税込みの値段は［結果］円になります。」を表示</p>
	<p>「結果は　定価＊１．０５」となっている部分が計算している部分です。</p>
</blockquote>
<p>　</p>
<h2>注意点　〜数値の有効範囲〜</h2>
<blockquote>
	<p class="tomo">とも　「あれれ？？　この計算がうまくいかない・・・」</p>
	<p class="neo">ねお　「どれどれ」</p>
	<p class="example">内容１は　「5000000000000001」<br>
	内容２は　「1999999999999999」<br>
	内容１＋内容２を表示</p>
	<p class="tomo">とも　「7E+15って表示される」</p>
	<p class="neo">ねお　「これは、桁あふれが原因です。あまりにも大きな数字や小さい数字はTTSneoでは計算や判断ができません。」</p>
	<p class="tomo">とも　「よくよく考えるとあまり使わないものね」</p>
	<p class="neo">ねお　「そう。TTSneoで有効な数字は、下のようになっています。」</p>
	<p>　</p>
	<p>数値が次の範囲を超えると、正確に計算・判断することができなくなります。</p>
	<p>+-0.000000000000001　〜　+-999,999,999,999,999</p>
	<p>また、整数のみが指定できる命令・関数では、次の範囲が有効です。</p>
	<p>-2,147,483,648 〜 2,147,483,647</p>
	<p>整数のみ指定できる関数で、10桁以上指定すると、エラーメッセージが表示されます。<br>
	小数の有効桁数は15桁です。それ次の位は、自動的に丸められます。</p>
</blockquote>
<p>　</p>
<h2>練習問題っ！</h2>
<blockquote>
	<p>このページで勉強したことを使って、簡単な練習問題に挑戦してみましょう。</p>
	<p><b>問１</b>　（（331+446）÷7）×90＋9を計算させてみましょう。</p>
	<p><b>問２</b>　同じようにして、いろいろな計算をさせてみましょう。</p>
</blockquote>

</body>

</html>
